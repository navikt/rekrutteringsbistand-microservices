name: toi-helseapp

env:
  APP_NAME: ${{ github.workflow }}

on:
  push:
    branches:
    - main
    paths:
    - apps/toi-helseapp/**
    - .github/workflows/deploy-toi-helseapp.yaml
    - buildSrc/**

permissions:
  packages: write

jobs:
  build-and-publish:
    name: Build, test, and publish
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Java v17.x
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17.x'
      - name: Gradle test and build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x ./gradlew
          ./gradlew :apps:${APP_NAME}:test :apps:${APP_NAME}:build
      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and publish docker image
        id: docker-build-push
        run: |
          TAG=$(if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then echo "latest"; else echo "${{ github.sha }}"; fi)
          IMAGE=ghcr.io/${{ github.repository }}/${{ github.workflow }}:${TAG}
          docker build --tag ${IMAGE} apps/${APP_NAME}
          docker push ${IMAGE}
          echo "image=${IMAGE}" >> $GITHUB_OUTPUT

  deploy-to-prod-gcp:
    name: Deploy to prod-gcp
    needs: build-and-publish
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: apps/${{ env.APP_NAME }}/nais.yaml,apps/${{ env.APP_NAME }}/alerts.yaml
          VAR: image=${{ needs.build-and-publish.outputs.image }}

  call-trivy-security-scan:
    needs: build-and-publish
    uses: navikt/toi-github-actions-workflows/.github/workflows/trivy-security-scan.yaml@main
    with:
      image: ${{ needs.build-and-publish.outputs.image }}
    permissions:
      id-token: write
      security-events: write
    secrets: inherit
